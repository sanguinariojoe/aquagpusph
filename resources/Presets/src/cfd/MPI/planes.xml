<?xml version="1.0" ?>

<!-- This module allows to use an infinite plane to set a boundaries with other
process.

You just need to include this module after MPI.xml, and set the variables:

 - mpi_plane_r: Bottom-left-back corner of the bounding box
 - mpi_plane_n: The outward pointing normal of the planes
 - mpi_plane_proc: Process id at the other side of the plane

You can add this module several times to add several bounding planes. In that
case, just edit the variables before each tool is executed ("mpi local mask" &
"mpi neighs mask"). You can use prefixes to this end.
Look at the following pseudo-example which divides the domain (bounded by
x = [0, L]):

<Include file="MPI/planes.xml" prefix="left_"/>
<Include file="MPI/planes.xml" prefix="right_"/>
<Variables>
    <Variable name="mpi_planes_dx" type="float" value="L / mpi_size" />
</Variables>
<Tools>
    <Tool action="insert" before="left_mpi local mask" type="set_scalar" name="left_mpi local mpi_plane_r" in="mpi_plane_r" value="mpi_rank * mpi_planes_dx, 0, 0, 0"/>
    <Tool action="insert" before="left_mpi local mask" type="set_scalar" name="left_mpi local mpi_plane_n" in="mpi_plane_n" value="-1, 0, 0, 0"/>
    <Tool action="insert" before="left_mpi local mask" type="set_scalar" name="left_mpi local mpi_plane_proc" in="mpi_plane_proc" value="mpi_rank &gt; 0 ? mpi_rank - 1 : mpi_rank"/>
    <Tool action="insert" before="left_mpi neighs mask" type="set_scalar" name="left_mpi neighs mpi_plane_r" in="mpi_plane_r" value="mpi_rank * mpi_planes_dx, 0, 0, 0"/>
    <Tool action="insert" before="left_mpi neighs mask" type="set_scalar" name="left_mpi neighs mpi_plane_n" in="mpi_plane_n" value="-1, 0, 0, 0"/>
    <Tool action="insert" before="left_mpi neighs mask" type="set_scalar" name="left_mpi neighs mpi_plane_proc" in="mpi_plane_proc" value="mpi_rank &gt; 0 ? mpi_rank - 1 : mpi_rank"/>
    <Tool action="insert" before="right_mpi local mask" type="set_scalar" name="right_mpi local mpi_plane_r" in="mpi_plane_r" value="(mpi_rank + 1) * mpi_planes_dx, 0, 0, 0"/>
    <Tool action="insert" before="right_mpi local mask" type="set_scalar" name="right_mpi local mpi_plane_n" in="mpi_plane_n" value="1, 0, 0, 0"/>
    <Tool action="insert" before="right_mpi local mask" type="set_scalar" name="right_mpi local mpi_plane_proc" in="mpi_plane_proc" value="mpi_rank &lt; mpi_size - 1 ? mpi_rank + 1 : mpi_rank"/>
    <Tool action="insert" before="right_mpi neighs mask" type="set_scalar" name="right_mpi neighs mpi_plane_r" in="mpi_plane_r" value="(mpi_rank + 1) * mpi_planes_dx, 0, 0, 0"/>
    <Tool action="insert" before="right_mpi neighs mask" type="set_scalar" name="right_mpi neighs mpi_plane_n" in="mpi_plane_n" value="1, 0, 0, 0"/>
    <Tool action="insert" before="right_mpi neighs mask" type="set_scalar" name="right_mpi neighs mpi_plane_proc" in="mpi_plane_proc" value="mpi_rank &lt; mpi_size - 1 ? mpi_rank + 1 : mpi_rank"/>
</Tools>

TODO: Test with several planes. I think this should work... But...
-->

<sphInput>
	<Variables>
		<Variable name="mpi_plane_r" symbol="r_{mpi,min}" type="vec"/>
		<Variable name="mpi_plane_n" symbol="n_{mpi}" type="vec"/>
		<Variable name="mpi_plane_proc" symbol="pid_{mpi}" type="unsigned int" value="mpi_rank"/>
	</Variables>

	<Tools>
		<Tool action="insert" after="mpi local mask reset" name="mpi local mask" type="kernel" path="../../../Scripts/cfd/MPI/planes.cl" entry_point="local_mask" />
		<Tool action="insert" after="mpi remove" name="mpi neighs mask" type="kernel" path="../../../Scripts/cfd/MPI/planes.cl" entry_point="neigh_mask"  />
	</Tools>
</sphInput>
