<?xml version="1.0" ?>

<!-- portal.xml
A pair of infinite plane portals with 2 functions:
  - The particles tresspasing the out portal will be teleported to the in portal
  - The particles close to the out portal will interact with the particles close
    to the in portal

It should be remarked that the portal is unidirectional, i.e. the particles
close to the in portal will not be affected at all.

To use this preset just simply include this file and set the variables:
  - portal_in_r: In portal infinite plane position
  - portal_out_r: Out portal infinite plane position
  - portal_n: portal infinite planes normal

A particles is considered out of the portal when
const float dist = dot(r[i] - portal_out_r, portal_out_n) > 0,
and it will be reinjected at the in portal as
r[i] = portal_in_r + dist * portal_out_n.

In case several portals should be included (for instance in periodic cases), the
variables commented above should be modified at each time step. For instance:

<Include file="portal.xml" prefix="left_"/>
<Include file="portal.xml" prefix="right_"/>
<Tools>
    <Tool action="insert" before="left_cfd portal* mirror*" type="set_scalar" name="left_portal_out_r" in="portal_out_r" value="-1.0, 0.0, 0.0, 0.0"/>
    <Tool action="insert" before="left_cfd portal* mirror*" type="set_scalar" name="left_portal_out_n" in="portal_out_n" value="-1.0, 0.0, 0.0, 0.0"/>
    <Tool action="insert" before="left_cfd portal* mirror*" type="set_scalar" name="left_portal_in_r" in="portal_in_r" value="1.0, 0.0, 0.0, 0.0"/>
    <Tool action="insert" before="left_cfd portal* mirror*" type="set_scalar" name="left_portal_in_n" in="portal_in_n" value="-1.0, 0.0, 0.0, 0.0"/>
    <Tool action="insert" before="right_cfd portal* mirror*" type="set_scalar" name="right_portal_out_r" in="portal_out_r" value="1.0, 0.0, 0.0, 0.0"/>
    <Tool action="insert" before="right_cfd portal* mirror*" type="set_scalar" name="right_portal_out_n" in="portal_out_n" value="1.0, 0.0, 0.0, 0.0"/>
    <Tool action="insert" before="right_cfd portal* mirror*" type="set_scalar" name="right_portal_in_r" in="portal_in_r" value="-1.0, 0.0, 0.0, 0.0"/>
    <Tool action="insert" before="right_cfd portal* mirror*" type="set_scalar" name="right_portal_in_n" in="portal_in_n" value="1.0, 0.0, 0.0, 0.0"/>
</Tools>

Some warnings may be shown if some modules are not loaded (e.g. MLS or
deltaSPH-full). Just simply ignore them
-->

<sphInput>
    <Variables>
        <Variable name="portal_in_r" type="vec" value="0.0, 0.0, 0.0, 0.0" />
        <Variable name="portal_out_r" type="vec" value="0.0, 0.0, 0.0, 0.0" />
        <Variable name="portal_n" type="vec" value="0.0, 0.0, 0.0, 0.0" />
        <!-- Helper flag to identify the particles close to the out portal -->
        <Variable name="imirrored" type="int*" length="N" />
        <!-- Helper variable to restore the icell after the mirroring (to avoid
        that truncation errors may destroy the linklist) -->
        <Variable name="icell_backup" type="size_t*" length="N" />
    </Variables>

    <Tools>
        <!-- 1st stage: MLS computation
             ==========================
        -->
        <!-- We must start mirroring particles (and marking them). -->
        <Tool name="cfd portal_mls icell backup" action="try_insert" before="imove1_MLS" type="copy" in="icell" out="icell_backup"/>
        <Tool name="cfd portal_mls mirror" action="try_insert" before="imove1_MLS" type="kernel" entry_point="mirror" path="../../Scripts/cfd/Boundary/Portal/Mirror.cl"/>
        <!-- Now we can compute the effect of the in portal particles -->
        <Tool name="cfd portal_mls MLS" action="try_insert" before="imove1_MLS" type="kernel" path="../../Scripts/cfd/Boundary/Portal/MLS.cl"/>
        <!-- We must unmirror the particles (even the ones which should be
        teleported) in order to dont missconsider the particles in subsequent
        interactions computations -->
        <Tool name="cfd portal_mls unmirror" action="try_insert" before="imove1_MLS" type="kernel" entry_point="unmirror" path="../../Scripts/cfd/Boundary/Portal/Mirror.cl"/>
        <Tool name="cfd portal_mls icell restore" action="try_insert" before="imove1_MLS" type="copy" in="icell_backup" out="icell"/>

        <!-- 2nd stage: Particle interactions
             ================================
        -->
        <!-- We must start mirroring particles (and marking them). -->
        <Tool name="cfd portal icell backup" action="insert" before="Interactions" type="copy" in="icell" out="icell_backup"/>
        <Tool name="cfd portal mirror" action="insert" before="Interactions" type="kernel" entry_point="mirror" path="../../Scripts/cfd/Boundary/Portal/Mirror.cl"/>
        <!-- Now we can compute the effect of the in portal particles -->
        <Tool name="cfd portal Shepard" action="insert" before="Interactions" type="kernel" path="../../Scripts/cfd/Boundary/Portal/Shepard.cl"/>
        <Tool name="cfd portal interactions" action="insert" before="Interactions" type="kernel" path="../../Scripts/cfd/Boundary/Portal/Interactions.cl"/>
        <Tool name="cfd portal BI" ifdef="__CFD_BI__" action="insert" before="Interactions" type="kernel" path="../../Scripts/cfd/Boundary/Portal/BoundaryIntegrals.cl"/>
        <Tool name="cfd portal delta-SPH" ifdef="__DELTA_SPH__" action="insert" before="Interactions" type="kernel" entry_point="lapp" path="../../Scripts/cfd/Boundary/Portal/deltaSPH.cl"/>
        <Tool name="cfd portal delta-SPH full" ifdef="__DELTA_SPH_FULL__" action="insert" before="Interactions" type="kernel" entry_point="full" path="../../Scripts/cfd/Boundary/Portal/deltaSPH.cl"/>
        <!-- We must unmirror the particles (even the ones which should be
        teleported) in order to dont missconsider the particles in subsequent
        interactions computations -->
        <Tool name="cfd portal unmirror" action="insert" before="Interactions" type="kernel" entry_point="unmirror" path="../../Scripts/cfd/Boundary/Portal/Mirror.cl"/>
        <Tool name="cfd portal icell restore" action="insert" before="Interactions" type="copy" in="icell_backup" out="icell"/>

        <!-- 3rd stage: delta-SPH correction
             ===============================
        -->
        <!-- We must start mirroring particles (and marking them). -->
        <Tool name="cfd portal_deltaSPH icell backup" action="try_insert" before="LapP Correction" type="copy" in="icell" out="icell_backup"/>
        <Tool name="cfd portal_deltaSPH mirror" action="try_insert" before="LapP Correction" type="kernel" entry_point="mirror" path="../../Scripts/cfd/Boundary/Portal/Mirror.cl"/>
        <!-- Now we can compute the effect of the in portal particles -->
        <Tool name="cfd portal_deltaSPH lapp_corr" action="try_insert" before="LapP Correction" type="kernel" entry_point="lapp_corr" path="../../Scripts/cfd/Boundary/Portal/deltaSPH.cl"/>
        <!-- We must unmirror the particles (even the ones which should be
        teleported) in order to dont missconsider the particles in subsequent
        interactions computations -->
        <Tool name="cfd portal_deltaSPH unmirror" action="try_insert" before="LapP Correction" type="kernel" entry_point="unmirror" path="../../Scripts/cfd/Boundary/Portal/Mirror.cl"/>
        <Tool name="cfd portal_deltaSPH icell restore" action="try_insert" before="LapP Correction" type="copy" in="icell_backup" out="icell"/>

        <!-- 4th stage: Particle teleporting
             ===============================
        -->
        <!-- Finally we should teleport the particles tresspassing the out
        portal. -->
        <Tool name="cfd portal mirror_teleport" action="insert" before="Corrector" type="kernel" entry_point="teleport" path="../../Scripts/cfd/Boundary/Portal/Mirror.cl"/>
    </Tools>
</sphInput>
